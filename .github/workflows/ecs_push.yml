name: Push to ECS

on:
  workflow_call:
    inputs:
      project-name:
        required: true
        type: string
      ecr-repository:
        required: true
        type: string
      ecs-cluster:
        required: true
        type: string
      ecs-service:
        required: true
        type: string
      container-name:
        required: true
        type: string
      docker-file-path:
        required: true
        type: string
      task-definition:
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_REGION:
        required: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download the gradle Build File
        uses: actions/download-artifact@v4
        with:
          name: ${{inputs.project-name}}-build
          path: ./Bootstrap-Module/${{inputs.project-name}}/build/libs

      - name: Configure AWS credentials For ECR
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Docker Build
        run: |
          docker buildx build --platform linux/amd64 linux/arm64 -t ${{ inputs.ecr-repository }}:${{ github.sha }} -f ${{ inputs.docker-file-path }} .
          docker tag ${{ inputs.ecr-repository }}:${{ github.sha }} ${{ inputs.ecr-repository }}:latest

      - name: Docker Push
        run: |
          docker push ${{ inputs.ecr-repository }}:${{ github.sha }}
          docker push ${{ inputs.ecr-repository }}:latest
          
          echo "new_image_name=${{ inputs.ecr-repository }}:${{ github.sha }}" >> "$GITHUB_OUTPUT"

      - name: Download Task Definition Template
        run: |
          aws ecs describe-task-definition --task-definition ${{ inputs.task-definition }}  --query taskDefinition > task-definition.json


      - name: Replace the image name in ${{inputs.project-name}} ECS task definition
        id: task-definition
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: ${{ inputs.container-name }}
          image: ${{ steps.docker-push.outputs.new_image_name }}

      - name: Deploy New ${{inputs.project-name}} ECS Task Definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ steps.task-definition.outputs.task-definition }}
          service: ${{ inputs.ecs-service }}
          cluster: ${{ inputs.ecs-cluster }}
          wait-for-service-stability: true
